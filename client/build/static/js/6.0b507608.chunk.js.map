{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","TypeError","FormInput","handleChange","label","otherProps","className","onChange","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpPage"],"mappings":"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","file":"static/js/6.0b507608.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\n\nimport './form-input.styles.scss';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n        <div className='group'>\n            <input className='form-input' onChange={handleChange} {...otherProps} />\n            {\n                label ? \n                (<label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>)\n                : null\n            }\n            \n        </div>\n    )\n\nexport default FormInput;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport './sign-in.styles.scss'\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n    const [userCredentials, setCredentials ] = useState({ \n        email: '', \n        password: ''\n    });\n    \n    const { email, password } = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        emailSignInStart(email, password);\n    };\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n        setCredentials({...userCredentials, [name]: value })\n    }\n\n    return (\n        <div className='sign-in'>\n            <h2>I already have an account</h2>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={ handleSubmit }>\n                <FormInput \n                name=\"email\" \n                type=\"email\" \n                label=\"email\"\n                value={email} \n                handleChange={handleChange }\n                required \n                />\n                <FormInput \n                name=\"password\" \n                type=\"password\"\n                label=\"password\" \n                value={password} \n                handleChange={handleChange }\n                required \n                />\n                <div className=\"buttons\">\n                    <CustomButton type='submit'>Sign In</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Google SignIn</CustomButton>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({ \n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart} from '../../redux/user/user.actions';\n\nimport './sign-up.styles.scss';\n\nconst SignUp = ({  signUpStart }) => {\n    const [userCredentials, setUserCredentials ] = useState({\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        })\n\n    const { displayName, email, password, confirmPassword } = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        \n\n        if (password !== confirmPassword) {\n            alert(`passwords don't match`);\n            return;\n        }\n        signUpStart({ displayName, email, password});\n    };\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n\n        setUserCredentials({...userCredentials, [name]: value});\n    }\n\n        return(\n            <div className='sign-up'>\n                <h2 className='title'>I do not have an account</h2>\n                <span>Sign up with your email and password</span>\n                <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n                    <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name'\n                    required\n                    />\n                    <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                    required\n                    />\n                    <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                    required\n                    />\n                    <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                    required\n                    />\n                    <CustomButton type='submit'>Sign Up</CustomButton>\n\n                </form>\n            </div>\n        )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials)),\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nimport './sign-in-and-sign-up.styles.scss';\n\nconst SignInAndSignUpPage = () => (\n        <div className='sign-in-and-sign-up'>\n            <SignIn />\n            <SignUp />\n        </div>\n    )\n\nexport default SignInAndSignUpPage;\n"],"sourceRoot":""}