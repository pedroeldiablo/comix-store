{"version":3,"sources":["components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreview","title","items","id","className","key","filter","item","idx","map","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherCollectionProps","isLoading","selectIsCollectionFetching","CollectionsOverviewContainer","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectShopCollection","createSelector","Object","keys","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","dispatch","addItem","name","price","imageUrl","style","backgroundImage","onClick","inverted"],"mappings":"6PAoBeA,G,OAfW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,GAAjB,OACtB,yBAAKC,UAAU,qBAAqBC,IAAKF,GACrC,wBAAIC,UAAU,SAAUH,EAAxB,KACA,yBAAKG,UAAU,WACbF,EACDI,QAAO,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAACF,GAAD,OACD,kBAAC,IAAD,CAAgBF,IAAKE,EAAKJ,GAAII,KAAMA,WCI1CG,G,OAAkBC,YAAyB,CAC7CC,YAAaC,OAIFC,cAAQJ,EAARI,EAba,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OACxB,yBAAKR,UAAU,wBACRQ,EAAYH,KAAI,gBAAIN,EAAJ,EAAIA,GAAOY,EAAX,6BACf,kBAAC,EAAD,eAAmBV,IAAKF,GAASY,WCHvCL,EAAkBC,YAAyB,CAC7CK,UAAWC,MAGTC,EAA+BC,YACjCL,YAAQJ,GACRU,IAFiCD,CAG/BE,GAESH,a,gCCjBf,oJAGMI,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAuBC,YAChC,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKZ,eAGNC,EAA8Ba,YACvC,CAACD,IACD,SAAAb,GAAW,OAAKA,EAAce,OAAOC,KAAKhB,GAAaH,KAAI,SAAAJ,GAAG,OAAIO,EAAYP,MAAQ,MAG7EwB,EAAmB,SAAAC,GAAkB,OAClDJ,YACI,CAACD,IACD,SAAAb,GAAW,OAAKA,EAAcA,EAAYkB,GAAsB,SAGvDb,EAA6BS,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKO,cAGJC,EAA4BN,YACrC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKZ,gB,oECfJQ,IATK,SAAAa,GAAgB,OAChC,YAAiC,IAA/BjB,EAA8B,EAA9BA,UAAckB,EAAgB,6BAC5B,OAAOlB,EACH,kBAAC,IAAD,MAEA,kBAACiB,EAAqBC,M,gCCTlC,kDAiCepB,gBAAQ,MAJI,SAAAqB,GAAQ,MAAK,CACpCC,QAAS,SAAA7B,GAAI,OAAI4B,EAASC,YAAQ7B,QAGvBO,EAxBQ,SAAC,GAAsB,IAArBP,EAAoB,EAApBA,KAAM6B,EAAc,EAAdA,QACnBC,EAAyB9B,EAAzB8B,KAAMC,EAAmB/B,EAAnB+B,MAAOC,EAAYhC,EAAZgC,SACpB,OAEG,yBAAKnC,UAAU,mBACX,yBAAKA,UAAU,QACfoC,MAAO,CACHC,gBAAgB,OAAD,OAASF,EAAT,QAInB,yBAAKnC,UAAU,qBACX,0BAAMA,UAAU,QAAQiC,GACxB,0BAAMjC,UAAU,SAASkC,IAE7B,kBAAC,IAAD,CAAcI,QAAS,kBAAMN,EAAQ7B,IAAOoC,UAAQ,GAApD,oB","file":"static/js/5.125f4939.chunk.js","sourcesContent":["import React from 'react';\nimport CollectionItem from '../collection-item/collection-item.component';\n\nimport './collection-preview.styles.scss';\n\nconst CollectionPreview = ({ title, items, id }) => (\n    <div className='collection-preview' key={id}>\n        <h1 className='title'>{ title } </h1>\n        <div className='preview'>\n        { items\n        .filter((item, idx) => idx < 4)\n        .map((item) => (\n            <CollectionItem key={item.id} item={item} />\n\n        ))\n        }\n        </div>\n    </div>\n)\n\nexport default CollectionPreview;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionPreview from '../../components/collection-preview/collection-preview.component';\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\n\nimport './collections-overview.styles.scss';\n\nconst CollectionsOverview = ({ collections }) => (\n    <div className='collections-overview'>\n         { collections.map(( { id, ...otherCollectionProps } ) => (\n            <CollectionPreview key={id} { ...otherCollectionProps }/>\n        ))}\n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview,\n  \n  });\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFetching\n});\n\nconst CollectionsOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner,\n    )(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n","import { createSelector } from 'reselect';\n\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollection = createSelector(\n    [selectShop],\n    (shop) => shop.collections\n)\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectShopCollection],\n    collections =>  collections ? Object.keys(collections).map(key => collections[key]) : [] \n)\n\nexport const selectCollection = collectionUrlParam => \ncreateSelector(\n    [selectShopCollection],\n    collections => (collections ? collections[collectionUrlParam] : null)\n)\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)\n","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => \n    ({isLoading, ...otherProps}) => {\n        return isLoading ? (\n            <Spinner />\n        ) : (\n            <WrappedComponent {...otherProps} />\n        )\n    };\n\nexport default WithSpinner;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions'\n\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport './collection-item.styles.scss'\n\n\nconst CollectionItem = ({item, addItem }) => {\n    const { name, price, imageUrl} = item;\n     return (\n         \n        <div className='collection-item'>\n            <div className='image'\n            style={{\n                backgroundImage: `url(${imageUrl})`\n            }}\n            \n            />\n            <div className='collection-footer'>\n                <span className='name'>{name}</span>\n                <span className='price'>{price}</span>\n            </div>\n            <CustomButton onClick={() => addItem(item)} inverted>Add to cart</CustomButton>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item)),\n})\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"],"sourceRoot":""}